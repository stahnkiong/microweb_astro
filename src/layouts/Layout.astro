---
import '~/assets/styles/tailwind.css';

import { I18N } from 'astrowind:config';

import CommonMeta from '~/components/common/CommonMeta.astro';
import Favicons from '~/components/Favicons.astro';
import CustomStyles from '~/components/CustomStyles.astro';
import ApplyColorMode from '~/components/common/ApplyColorMode.astro';
import Metadata from '~/components/common/Metadata.astro';
import SiteVerification from '~/components/common/SiteVerification.astro';
// import Analytics from '~/components/common/Analytics.astro';
import BasicScripts from '~/components/common/BasicScripts.astro';
// Comment the line below to disable View Transitions
// import { ClientRouter  } from 'astro:transitions';

import type { MetaData as MetaDataType } from '~/types';

export interface Props {
  metadata?: MetaDataType;
}

const { metadata = {} } = Astro.props;
const { language, textDirection } = I18N;
---

<!doctype html>
<html lang={language} dir={textDirection} class="text-base">
  <head>
    <CommonMeta />
    <Favicons />
    <CustomStyles />
    <ApplyColorMode />
    <Metadata {...metadata} />
    <SiteVerification />
    <!-- <Analytics /> -->
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-GM5ZSBEGN2"></script>
    <script is:inline>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-GM5ZSBEGN2');
    </script>

    
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/intl-tel-input@25.3.1/build/css/intlTelInput.css">
    <style>
      /* Fix for Astro's CSS handling */
      .iti__flag {
        background-image: url("/flags.png");
      }
      
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .iti__flag {
          background-image: url("/flags@2x.png");
        }
      }
    </style>
    
    <script>
      import intlTelInput from "intl-tel-input";
      document.addEventListener("DOMContentLoaded", () => {
    
        const input = document.querySelector("#phone");
        intlTelInput(input, {
            // any initialisation options go here
            loadUtils: () => import("intl-tel-input/build/js/utils.js"),
            initialCountry: "auto",
            geoIpLookup: function(callback) {
              fetch("https://ipapi.co/json")
                .then(function(res) { return res.json(); })
                .then(function(data) { callback(data.country_code); })
                .catch(function() { callback("us"); });
            },
            hiddenInput: (_telInputName) => ({
            phone: "phone_full",
            country: "country_code"
            }),
        });
    
          const form = document.getElementById("web3form");
          const result = document.getElementById("web3result");
    
          form.addEventListener("submit", function (e) {
            e.preventDefault();
            form.classList.add("was-validated");
            if (!form.checkValidity()) {
              form.querySelectorAll(":invalid")[0].focus();
              return;
            }
            const formData = new FormData(form);
            const object = Object.fromEntries(formData);
            const json = JSON.stringify(object);
    
            result.innerHTML = "Sending...";
    
            fetch("https://api.web3forms.com/submit", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                Accept: "application/json",
              },
              body: json,
            })
              .then(async (response) => {
                const json = await response.json();
                if (response.status == 200) {
                  result.classList.add("text-green-500");
                  result.innerHTML = json.message;
                  gtag('event', 'conversion_event_submit_lead_form_1', {
                  });
                } else {
                  console.log(response);
                  result.classList.add("text-red-500");
                  result.innerHTML = json.message;
                }
              })
              .catch((error) => {
                console.log(error);
                result.innerHTML = "Something went wrong!";
              })
              .then(function () {
                form.reset();
                form.classList.remove("was-validated");
                setTimeout(() => {
                  result.style.display = "none";
                }, 5000);
              });
          });
        },
        { once: true },
      );
    </script>
    
    <!-- Comment the line below to disable View Transitions -->
    <!-- <ClientRouter  /> -->
  </head>

  <body class="antialiased text-default bg-page tracking-tight">
    <slot />

    <BasicScripts />

    <style is:global>
      img {
        content-visibility: auto;
      }
    </style>
  </body>
</html>
